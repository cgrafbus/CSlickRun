<local:ViewBase
    x:Class="CSlickRun.UI.Views.SettingsView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:colorCanvas="clr-namespace:CSlickRun.UI.Controls.ColorCanvas"
    xmlns:controls="clr-namespace:CSlickRun.UI.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:CSlickRun.UI.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:CSlickRun.UI.ViewModels"
    d:DesignHeight="800"
    d:DesignWidth="1500"
    FontFamily="Lucida Console"
    mc:Ignorable="d">
    <local:ViewBase.DataContext>
        <viewModels:SettingsVm />
    </local:ViewBase.DataContext>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="10*" />
            <RowDefinition Height="1*" />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="6*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel
            x:Name="SideBarHost"
            Grid.Row="0"
            Grid.Column="1"
            Panel.ZIndex="10"
            Orientation="Vertical" />
        <ScrollViewer
            x:Name="Scroller"
            Grid.Row="0"
            Grid.Column="0"
            Style="{DynamicResource ModernScrollViewer}">
            <StackPanel x:Name="ContentHost" Orientation="Vertical">
                <controls:PanelHeader HeaderLabelContent="General" />
                <Grid
                    Width="600"
                    Height="25"
                    Margin="0,15,0,0"
                    HorizontalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <CheckBox
                        Grid.Column="0"
                        Content="Always on top"
                        IsChecked="{Binding AlwaysOnTop, Mode=TwoWay}"
                        Style="{DynamicResource CheckboxModern}" />
                    <CheckBox
                        Grid.Column="1"
                        Content="Automatic Startup"
                        IsChecked="{Binding AutoStartup, Mode=TwoWay}"
                        Style="{DynamicResource CheckboxModern}" />
                    <CheckBox
                        Grid.Column="2"
                        Content="Enable History"
                        IsChecked="{Binding WriteHistory, Mode=TwoWay}"
                        Style="{DynamicResource CheckboxModern}" />
                </Grid>
                <controls:PanelHeader Margin="0,15,0,0" HeaderLabelContent="Configure Shortcut" />
                <Grid
                    Width="600"
                    Height="25"
                    Margin="0,15,0,0"
                    HorizontalAlignment="Center">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <CheckBox
                        Grid.Column="0"
                        Content="Strg"
                        Foreground="{DynamicResource MainAccentBrush}"
                        IsChecked="{Binding StrgBool, Mode=TwoWay}"
                        Style="{DynamicResource CheckboxModern}" />
                    <CheckBox
                        Grid.Column="1"
                        Content="Windows"
                        IsChecked="{Binding WinBool, Mode=TwoWay}"
                        Style="{DynamicResource CheckboxModern}" />
                    <CheckBox
                        Grid.Column="2"
                        Content="Alt"
                        IsChecked="{Binding AltBool, Mode=TwoWay}"
                        Style="{DynamicResource CheckboxModern}" />
                    <CheckBox
                        Grid.Column="3"
                        Content="Shift"
                        IsChecked="{Binding ShiftBool, Mode=TwoWay}"
                        Style="{DynamicResource CheckboxModern}" />
                    <StackPanel
                        Grid.Column="4"
                        HorizontalAlignment="Center"
                        Orientation="Horizontal">
                        <TextBlock
                            x:Name="ShortCutPlaceholderTextBlock"
                            Panel.ZIndex="5"
                            FontSize="16"
                            Foreground="{DynamicResource MainAccentBrush}"
                            Style="{DynamicResource SlickRunCommandLineAutCompleteStyle}"
                            Text="char:"
                            TextAlignment="Left" />
                        <TextBox
                            x:Name="ShortcutTextBox"
                            Width="20"
                            Margin="3,0,0,0"
                            Foreground="{DynamicResource MainForegroundBrush}"
                            MaxLength="1"
                            Style="{DynamicResource ModernTextBox}"
                            Text="{Binding Shortcut, Mode=TwoWay}"
                            TextAlignment="Center" />
                    </StackPanel>
                </Grid>
                <controls:PanelHeader Margin="0,15,0,0" HeaderLabelContent="Design" />
                <WrapPanel
                    Width="1000"
                    Margin="0,10,0,0"
                    HorizontalAlignment="Stretch"
                    Orientation="Horizontal">
                    <colorCanvas:ColorCanvas HeaderContent="Foreground" HexadecimalString="{Binding CommandLineForegroundColor, Mode=TwoWay}" />
                    <colorCanvas:ColorCanvas HeaderContent="Active Background" HexadecimalString="{Binding CommandLineBackgroundColor, Mode=TwoWay}" />
                    <colorCanvas:ColorCanvas HeaderContent="Inactive Background" HexadecimalString="{Binding CommandLineInactiveBackgroundColor, Mode=TwoWay}" />
                    <colorCanvas:ColorCanvas HeaderContent="Active Border" HexadecimalString="{Binding BorderColor, Mode=TwoWay}" />
                    <colorCanvas:ColorCanvas HeaderContent="Inactive Border" HexadecimalString="{Binding BorderInactiveColor, Mode=TwoWay}" />
                    <colorCanvas:ColorCanvas HeaderContent="Caret" HexadecimalString="{Binding CaretColor, Mode=TwoWay}" />
                    <colorCanvas:ColorCanvas HeaderContent="Selectionbrush" HexadecimalString="{Binding SelectionColor, Mode=TwoWay}" />
                    <colorCanvas:ColorCanvas HeaderContent="Autocomplete-Foreground" HexadecimalString="{Binding AutoCompleteForegroundColor, Mode=TwoWay}" />
                    <colorCanvas:ColorCanvas HeaderContent="Autocomplete-Background" HexadecimalString="{Binding AutoCompleteBackgroundColor, Mode=TwoWay}" />
                </WrapPanel>
                <controls:PanelHeader Margin="0,25,0,0" HeaderLabelContent="Layout" />
                <StackPanel
                    Margin="0,10,0,0"
                    HorizontalAlignment="Center"
                    Orientation="Horizontal">
                    <Label Content="Width, Height:" />
                    <TextBox
                        Width="100"
                        Foreground="{DynamicResource MainForegroundBrush}"
                        InputScope="Number"
                        PreviewTextInput="UIElement_OnPreviewTextInput"
                        Style="{DynamicResource ModernTextBox}"
                        Text="{Binding CommandLineWidth, Mode=TwoWay}" />
                    <TextBox
                        Width="100"
                        Foreground="{DynamicResource MainForegroundBrush}"
                        InputScope="Number"
                        PreviewTextInput="UIElement_OnPreviewTextInput"
                        Style="{DynamicResource ModernTextBox}"
                        Text="{Binding CommandLineHeight, Mode=TwoWay}" />
                </StackPanel>
            </StackPanel>
        </ScrollViewer>
        <Button
            Grid.Row="1"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Width="300"
            Background="{DynamicResource MainBackgroundBrush}"
            Command="{Binding SaveCommand}"
            Content="Save"
            Cursor="Hand"
            Style="{DynamicResource ButtonDefault}" />
    </Grid>
</local:ViewBase>
